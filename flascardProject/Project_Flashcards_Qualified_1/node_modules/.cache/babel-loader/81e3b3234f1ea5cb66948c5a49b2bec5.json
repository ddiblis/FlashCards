{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link, useHistory, useParams } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./DeckList\";\nimport CreateDeck from \"./CreateDeck\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport { listDecks, readDeck, listCards } from \"../utils/api\";\n\nfunction StudyDeck() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks().then(decks => {\n      return decks.find(d => d.id === parseInt(deckId));\n    }).then(deck => {\n      setSelectedDeck(deck);\n      listCards(deck.id, abortController.signal).then(setCardList);\n    });\n    return () => abortController.abort();\n  }, [deckId]);\n  if (cardList.length === 0) return /*#__PURE__*/React.createElement(React.Fragment, null);\n  const validCards = cardList.filter(card => !card.cards); // console.log(validCards[1]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" \", \"Study: \" + selectedDeck.name), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, selectedCard + 1 + \" of \" + validCards.length), !flipped ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, validCards[selectedCard].front), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Flip\")) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, validCards[selectedCard].back), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Flip\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      float: \"left\",\n      marginLeft: \"5px\"\n    },\n    onClick: () => {\n      setSelectedCard(selectedCard + 1);\n      setFlipped(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Next\")))));\n}\n\nfunction Layout() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CreateDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/decks/:deckId`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DisplayDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/decks/:deckId/study`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StudyDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Switch","Route","Link","useHistory","useParams","Header","NotFound","DeckList","CreateDeck","DisplayDeck","listDecks","readDeck","listCards","StudyDeck","selectedDeck","setSelectedDeck","cardList","setCardList","flipped","setFlipped","selectedCard","setSelectedCard","deckId","abortController","AbortController","then","decks","find","d","id","parseInt","deck","signal","abort","length","validCards","filter","card","cards","name","front","float","back","marginLeft","Layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link, useHistory, useParams } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./DeckList\";\nimport CreateDeck from \"./CreateDeck\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport { listDecks, readDeck, listCards } from \"../utils/api\";\n\nfunction StudyDeck() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const { deckId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks()\n      .then((decks) => {\n        return decks.find((d) => d.id === parseInt(deckId));\n      })\n      .then((deck) => {\n        setSelectedDeck(deck);\n        listCards(deck.id, abortController.signal).then(setCardList);\n      });\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (cardList.length === 0) return <></>;\n  const validCards = cardList.filter((card) => !card.cards);\n  // console.log(validCards[1]);\n\n  return (\n    <div className=\"container\">\n      <h1> {\"Study: \" + selectedDeck.name}</h1>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">\n            {selectedCard + 1 + \" of \" + validCards.length}\n          </h5>\n          {!flipped ? (\n            <Fragment>\n              <p class=\"card-text\">{validCards[selectedCard].front}</p>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                style={{ float: \"left\" }}\n                onClick={() => setFlipped(true)}\n              >\n                Flip\n              </button>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <p class=\"card-text\">{validCards[selectedCard].back}</p>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                style={{ float: \"left\" }}\n                onClick={() => setFlipped(false)}\n              >\n                Flip\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                style={{ float: \"left\", marginLeft: \"5px\" }}\n                onClick={() => {\n                  setSelectedCard(selectedCard + 1)\n                  setFlipped(false)\n                }}\n              >\n                Next\n              </button>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Layout() {\n  return (\n    <Fragment>\n      <Link to=\"/\"></Link>\n      <Link to=\"/decks/new\"></Link>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <DeckList />\n          </Route>\n          <Route exact path=\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route exact path={`/decks/:deckId`}>\n            <DisplayDeck />\n          </Route>\n          <Route exact path={`/decks/:deckId/study`}>\n            <StudyDeck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}