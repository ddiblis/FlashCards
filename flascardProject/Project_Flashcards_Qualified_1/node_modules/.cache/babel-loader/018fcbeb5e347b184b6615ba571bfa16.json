{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyDeck.jsx\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { listDecks, listCards, readDeck } from \"../utils/api\";\nexport default function StudyDeck() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(deck => {\n      setSelectedDeck(deck);\n      setCardList(deck.cards);\n    });\n    return () => abortController.abort();\n  }, [deckId]); // if (cardList.length === 0) return <Fragment />;\n\n  const validCards = cardList && cardList.filter(card => !card.cards);\n  const cardLogic = validCards.length > 2 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, selectedCard + 1 + \" of \" + validCards.length), \"!flipped ? (\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, validCards[selectedCard].front), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Flip\"), \") : (\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, validCards[selectedCard].back), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Flip\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      float: \"left\",\n      marginLeft: \"5px\"\n    },\n    onClick: () => {\n      const nextCard = selectedCard + 1;\n\n      if (validCards[nextCard]) {\n        setSelectedCard(nextCard);\n        setFlipped(false);\n      } else if (window.confirm(\"Restart Cards?\")) {\n        setSelectedCard(0);\n        setFlipped(false);\n      } else {\n        history.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Next\"), \")\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Not enough cards.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"You need at least 3 cards to study. There are \" + validCards.length + \" cards in the deck.\", \" \"), /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${selectedDeck.id}/cards/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      marginLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Add Cards\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 43\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${selectedDeck.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 70\n    }\n  }, selectedDeck.name)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Study\"))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \" \", \"Study: \" + selectedDeck.name), cardLogic);\n}","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyDeck.jsx"],"names":["React","useEffect","useState","Fragment","useHistory","useParams","Link","listDecks","listCards","readDeck","StudyDeck","selectedDeck","setSelectedDeck","cardList","setCardList","flipped","setFlipped","selectedCard","setSelectedCard","deckId","history","abortController","AbortController","signal","then","deck","cards","abort","validCards","filter","card","cardLogic","length","front","float","back","marginLeft","nextCard","window","confirm","push","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\"\nimport { useHistory, useParams, Link } from \"react-router-dom\"\n\nimport { listDecks, listCards, readDeck } from \"../utils/api\"\n\nexport default function StudyDeck() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const { deckId } = useParams();\n  const history = useHistory()\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(deck => {\n      setSelectedDeck(deck)\n      setCardList(deck.cards)\n    });\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n\n  // if (cardList.length === 0) return <Fragment />;\n  const validCards = cardList && cardList.filter(card => !card.cards)\n\n  const cardLogic = \n      validCards.length > 2 ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              {selectedCard + 1 + \" of \" + validCards.length}\n            </h5>\n            !flipped ? (\n                <p className=\"card-text\">{validCards[selectedCard].front}</p>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  style={{ float: \"left\" }}\n                  onClick={() => setFlipped(true)}\n                >\n                  Flip\n                </button>\n            ) : (\n                <p className=\"card-text\">{validCards[selectedCard].back}</p>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  style={{ float: \"left\" }}\n                  onClick={() => setFlipped(false)}\n                >\n                  Flip\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  style={{ float: \"left\", marginLeft: \"5px\" }}\n                  onClick={() => {\n                    const nextCard = selectedCard + 1\n                    if(validCards[nextCard]) {\n                    setSelectedCard(nextCard)\n                    setFlipped(false)\n                    }\n                    else if (window.confirm(\"Restart Cards?\")) {\n                      setSelectedCard(0)\n                      setFlipped(false)\n                    }\n                    else {\n                      history.push(\"/\")\n                    }\n                  }}\n                >\n                  Next\n                </button>\n            )\n        </div>\n      </div>\n      ) : (\n        <div>\n          <h3>Not enough cards.</h3>\n          <p>{\"You need at least 3 cards to study. There are \" + validCards.length + \" cards in the deck.\"} </p>\n          <Link to={`/decks/${selectedDeck.id}/cards/new`}>\n            <button \n                type=\"button\" \n                className=\"btn btn-primary\" \n                style={{ marginLeft: \"5px\"}}\n                >\n                Add Cards\n            </button>\n          </Link>\n        </div>\n      )\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={`/decks/${selectedDeck.id}`}>{selectedDeck.name}</Link></li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">Study</li>\n        </ol>\n      </nav>\n      <h1> {\"Study: \" + selectedDeck.name}</h1>\n      {cardLogic}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}