{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyCardLogic.jsx\";\nimport React, { Fragment, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nexport default function StudyCardLogic(props) {\n  const {\n    validCards,\n    selectedDeck,\n    cardList\n  } = props;\n  const history = useHistory();\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  const isCardFlipped = !flipped ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, validCards[selectedCard].front), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, \"Flip\")) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, validCards[selectedCard].back), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      float: \"left\"\n    },\n    onClick: () => setFlipped(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Flip\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      float: \"left\",\n      marginLeft: \"5px\"\n    },\n    onClick: () => {\n      const nextCard = selectedCard + 1;\n\n      if (validCards[nextCard]) {\n        setSelectedCard(nextCard);\n        setFlipped(false);\n      } else if (window.confirm(\"Restart Cards?\")) {\n        setSelectedCard(0);\n        setFlipped(false);\n      } else {\n        history.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Next\"));\n  return validCards.length > 2 || cardList.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, selectedCard + 1 + \" of \" + validCards.length), isCardFlipped)) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Not enough cards.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"You need at least 3 cards to study. There are \" + validCards.length + \" cards in the deck.\", \" \"), /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${selectedDeck.id}/cards/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      marginLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Add Cards\")));\n}","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyCardLogic.jsx"],"names":["React","Fragment","useState","useHistory","Link","StudyCardLogic","props","validCards","selectedDeck","cardList","history","flipped","setFlipped","selectedCard","setSelectedCard","isCardFlipped","front","float","back","marginLeft","nextCard","window","confirm","push","length","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\"\nimport { useHistory, Link } from \"react-router-dom\"\n\nexport default function StudyCardLogic(props) {\n  const { validCards, selectedDeck, cardList } = props\n  const history = useHistory()\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n\n\n  const isCardFlipped = \n            !flipped ? (\n            <Fragment>\n              <p className=\"card-text\">{validCards[selectedCard].front}</p>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                style={{ float: \"left\" }}\n                onClick={() => setFlipped(true)}\n              >\n                Flip\n              </button>\n            </Fragment>\n            ) : (\n              <Fragment>\n                <p className=\"card-text\">{validCards[selectedCard].back}</p>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  style={{ float: \"left\" }}\n                  onClick={() => setFlipped(false)}\n                >\n                  Flip\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  style={{ float: \"left\", marginLeft: \"5px\" }}\n                  onClick={() => {\n                    const nextCard = selectedCard + 1\n                    if(validCards[nextCard]) {\n                    setSelectedCard(nextCard)\n                    setFlipped(false)\n                    }\n                    else if (window.confirm(\"Restart Cards?\")) {\n                      setSelectedCard(0)\n                      setFlipped(false)\n                    }\n                    else {\n                      history.push(\"/\")\n                    }\n                  }}\n                >\n                  Next\n                </button>\n              </Fragment>\n            )\n\n    return (validCards.length > 2 || cardList.length === 0 ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              {selectedCard + 1 + \" of \" + validCards.length}\n            </h5>\n            {isCardFlipped}\n          </div>\n      </div>\n      ) : (\n        <Fragment>\n          <h3>Not enough cards.</h3>\n          <p>{\"You need at least 3 cards to study. There are \" + validCards.length + \" cards in the deck.\"} </p>\n          <Link to={`/decks/${selectedDeck.id}/cards/new`}>\n            <button \n                type=\"button\" \n                className=\"btn btn-primary\" \n                style={{ marginLeft: \"5px\"}}\n                >\n                Add Cards\n            </button>\n          </Link>\n        </Fragment>\n      )\n    )\n}"]},"metadata":{},"sourceType":"module"}