{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/school-projects/FlashCards/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyCardLogic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyCardLogic(props) {\n  _s();\n\n  const {\n    validCards\n  } = props;\n  const history = useHistory();\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: `Card ${selectedCard + 1} of ${validCards.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), !flipped ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: validCards[selectedCard].front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          style: {\n            float: \"left\"\n          },\n          onClick: () => setFlipped(true),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: validCards[selectedCard].back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          style: {\n            float: \"left\"\n          },\n          onClick: () => setFlipped(false),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          style: {\n            float: \"left\",\n            marginLeft: \"5px\"\n          },\n          onClick: () => {\n            const nextCard = selectedCard + 1;\n\n            if (validCards[nextCard]) {\n              setSelectedCard(nextCard);\n              setFlipped(false);\n            } else if (window.confirm(\"Restart Cards?\")) {\n              setSelectedCard(0);\n              setFlipped(false);\n            } else {\n              history.push(\"/\");\n            }\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudyCardLogic, \"6XnPSX9Np2zGUFA2dGpRfnHoG5s=\", false, function () {\n  return [useHistory];\n});\n\n_c = StudyCardLogic;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCardLogic\");","map":{"version":3,"sources":["/home/iblis/src/school-projects/FlashCards/flascardProject/Project_Flashcards_Qualified_1/src/Layout/StudyCardLogic.jsx"],"names":["React","Fragment","useState","useHistory","StudyCardLogic","props","validCards","history","flipped","setFlipped","selectedCard","setSelectedCard","length","front","float","back","marginLeft","nextCard","window","confirm","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAME,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACI,QAAQQ,YAAY,GAAG,CAAG,OAAMJ,UAAU,CAACM,MAAO;AADtD;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,CAACJ,OAAD,gBACC,QAAC,QAAD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BF,UAAU,CAACI,YAAD,CAAV,CAAyBG;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,mBAFZ;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAIE,UAAA,OAAO,EAAE,MAAML,UAAU,CAAC,IAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAaC,QAAC,QAAD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BH,UAAU,CAACI,YAAD,CAAV,CAAyBK;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,mBAFZ;AAGE,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAHT;AAIE,UAAA,OAAO,EAAE,MAAML,UAAU,CAAC,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,iBAFZ;AAGE,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE,MAAT;AAAiBE,YAAAA,UAAU,EAAE;AAA7B,WAHT;AAIE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMC,QAAQ,GAAGP,YAAY,GAAG,CAAhC;;AACA,gBAAIJ,UAAU,CAACW,QAAD,CAAd,EAA0B;AACxBN,cAAAA,eAAe,CAACM,QAAD,CAAf;AACAR,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAHD,MAGO,IAAIS,MAAM,CAACC,OAAP,CAAe,gBAAf,CAAJ,EAAsC;AAC3CR,cAAAA,eAAe,CAAC,CAAD,CAAf;AACAF,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAHM,MAGA;AACLF,cAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,WAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GA3DuBhB,c;UAEND,U;;;KAFMC,c","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function StudyCardLogic(props) {\n  const { validCards } = props;\n  const history = useHistory();\n  const [flipped, setFlipped] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(0);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          {`Card ${(selectedCard + 1)} of ${validCards.length}`}\n        </h5>\n        {!flipped ? (\n          <Fragment>\n            <p className=\"card-text\">{validCards[selectedCard].front}</p>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              style={{ float: \"left\" }}\n              onClick={() => setFlipped(true)}\n            >\n              Flip\n            </button>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <p className=\"card-text\">{validCards[selectedCard].back}</p>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              style={{ float: \"left\" }}\n              onClick={() => setFlipped(false)}\n            >\n              Flip\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              style={{ float: \"left\", marginLeft: \"5px\" }}\n              onClick={() => {\n                const nextCard = selectedCard + 1;\n                if (validCards[nextCard]) {\n                  setSelectedCard(nextCard);\n                  setFlipped(false);\n                } else if (window.confirm(\"Restart Cards?\")) {\n                  setSelectedCard(0);\n                  setFlipped(false);\n                } else {\n                  history.push(\"/\");\n                }\n              }}\n            >\n              Next\n            </button>\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}