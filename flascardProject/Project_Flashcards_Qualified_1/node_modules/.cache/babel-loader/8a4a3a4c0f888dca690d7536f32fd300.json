{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api\";\n\nfunction Deck({\n  deck\n}) {\n  const [cardList, setCardList] = useState([]);\n  useEffect(() => {\n    listDecks().then(d => {\n      const cards = d.find(d2 => d2.id === deck.id).cards;\n      setCardList(cards);\n    });\n  }, [deck.id]);\n  const noOfCards = cardList && cardList.filter(card => !card.cards).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, deck.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, noOfCards + \" cards\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, deck.description), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: true,\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: true,\n    style: {\n      margin: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Study\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    style: {\n      marginLeft: \"700px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Delete Deck\")));\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDeckList);\n    return () => abortController.abort();\n  }, []);\n  const cardList = deckList.length > 0 ? deckList.map(deck => /*#__PURE__*/React.createElement(Deck, {\n    key: deck.id,\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-lg\",\n    onClick: () => history.push('/decks/new'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Create Deck\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, cardList));\n}\n\nfunction CreateDeck() {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = event => setName(event.target.value);\n\n  const handleDescriptionChange = event => setDescription(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \" Create Deck\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Name\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Deck Name\",\n    onChange: handleNameChange,\n    style: {\n      width: \"100%\"\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Brief description of the deck\",\n    onChange: handleDescriptionChange,\n    style: {\n      width: \"100%\",\n      height: \"150px\"\n    },\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"flex-start\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Cancel\")));\n} // function handleClick(arg) {\n//   if (arg === \"Create Deck\") {\n//     return <Link to={\"/decks/new\"}></Link>\n//   }\n//   if (arg === \"view\") {\n//   }\n//   if (arg === \"study\") {\n//   }\n// }\n\n\nfunction Layout() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/decks/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CreateDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Switch","Route","Link","useHistory","Header","NotFound","listDecks","Deck","deck","cardList","setCardList","then","d","cards","find","d2","id","noOfCards","filter","card","length","name","description","margin","marginLeft","DeckList","deckList","setDeckList","history","abortController","AbortController","signal","abort","map","push","CreateDeck","setName","setDescription","handleNameChange","event","target","value","handleDescriptionChange","width","height","justifyContent","Layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api\";\n\nfunction Deck({ deck }) {\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n      listDecks().then(d => {\n        const cards = d.find(d2 => d2.id === deck.id).cards\n        setCardList(cards)\n      })\n  }, [deck.id])\n\n  const noOfCards = cardList && cardList.filter((card) => !card.cards).length;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p>{noOfCards + \" cards\"}</p>\n        <p className=\"card-text\">{deck.description}</p>\n          <button \n            type=\"button\" \n            className=\"btn btn-secondary\" \n            onClick\n            style={{ margin: \"5px\" }}\n            >\n            View\n          </button>\n          <button \n            type=\"button\" \n            className=\"btn btn-primary\" \n            onClick\n            style={{ margin: \"5px\"}}\n            >\n            Study\n          </button>\n          <button \n            type=\"button\" \n            className=\"btn btn-danger\"\n            style={{ marginLeft: \"700px\" }}\n            >\n            Delete Deck\n          </button>\n      </div>\n    </div>\n  );\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  const history = useHistory()\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    listDecks(abortController.signal).then(setDeckList)\n\n    return () => abortController.abort();\n  }, []);\n\n  const cardList =\n    deckList.length > 0 ? (\n      deckList.map((deck) => <Deck key={deck.id} deck={deck} />)\n    ) : (\n      <p />\n    );\n\n  return (\n    <main className=\"container\">\n      <button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => history.push('/decks/new')}>\n        Create Deck\n      </button>\n      <section className=\"column\">{cardList}</section>\n    </main>\n  );\n}\n\nfunction CreateDeck() {\n  const [name, setName] = useState(\"\")\n  const [description, setDescription] = useState(\"\") \n  const handleNameChange = (event) => setName(event.target.value)\n  const handleDescriptionChange = (event) => setDescription(event.target.value)\n\n  return (\n    <div className=\"container\">\n      <h1> Create Deck</h1>\n    <form>\n      <label htmlFor=\"name\">Name</label> <br />\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Deck Name\"\n          onChange={handleNameChange}\n          style={{ width: \"100%\" }}\n          value={name}\n        /> <br />\n        <br />\n      <label htmlFor=\"description\">Description</label><br />\n        <textarea\n        id=\"description\"\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Brief description of the deck\"\n        onChange={handleDescriptionChange}\n        style={{ width: \"100%\", height: \"150px\" }}\n        value={description}\n        /> <br />\n    </form>\n    <div style={{ justifyContent: \"flex-start\"}}>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      <button type=\"button\" class=\"btn btn-secondary\">Cancel</button>\n    </div>\n    </div>\n  );\n}\n\n// function handleClick(arg) {\n\n//   if (arg === \"Create Deck\") {\n//     return <Link to={\"/decks/new\"}></Link>\n\n//   }\n\n//   if (arg === \"view\") {\n\n//   }\n\n//   if (arg === \"study\") {\n\n//   }\n\n// }\n\nfunction Layout() {\n\n  return (\n    <Fragment>\n      <Link to=\"/\"></Link>\n      <Link to=\"/decks/new\"></Link>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <DeckList />\n          </Route>\n          <Route exact path=\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}