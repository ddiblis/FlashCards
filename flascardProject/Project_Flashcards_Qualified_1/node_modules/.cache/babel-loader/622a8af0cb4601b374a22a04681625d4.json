{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api\";\n\nfunction Deck({\n  deck\n}) {\n  const [cardList, setCardList] = useState([]);\n  useEffect(() => {\n    listDecks().then(d => {\n      const cards = d.find(d2 => d2.id === deck.id).cards;\n      setCardList(cards);\n    });\n  }, [deck.id]);\n  const noOfCards = cardList && cardList.filter(card => !card.cards).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, deck.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, noOfCards + \" cards\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, deck.description), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: handleClick(\"view\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: handleClick(\"study\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Study\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Delete Deck\")));\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDeckList);\n    return () => abortController.abort();\n  }, []);\n  const cardList = deckList.length > 0 ? deckList.map(deck => /*#__PURE__*/React.createElement(Deck, {\n    key: deck.id,\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 30\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, cardList));\n}\n\nfunction handleClick(arg) {\n  if (arg === \"Create Deck\") {}\n\n  if (arg === \"view\") {}\n\n  if (arg === \"study\") {}\n}\n\nfunction Layout() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-lg\",\n    onClick: handleClick(\"Create Deck\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Create Deck\"), /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Switch","Route","Link","Header","NotFound","listDecks","Deck","deck","cardList","setCardList","then","d","cards","find","d2","id","noOfCards","filter","card","length","name","description","handleClick","DeckList","deckList","setDeckList","abortController","AbortController","signal","abort","map","arg","Layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listDecks } from \"../utils/api\";\n\nfunction Deck({ deck }) {\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n      listDecks().then(d => {\n        const cards = d.find(d2 => d2.id === deck.id).cards\n        setCardList(cards)\n      })\n  }, [deck.id])\n\n  const noOfCards = cardList && cardList.filter((card) => !card.cards).length;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p>{noOfCards + \" cards\"}</p>\n        <p className=\"card-text\">{deck.description}</p>\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClick(\"view\")}>\n          View\n        </button>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick(\"study\")}>\n          Study\n        </button>\n        <button type=\"button\" className=\"btn btn-danger\">\n          Delete Deck\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    listDecks(abortController.signal).then(setDeckList)\n\n    return () => abortController.abort();\n  }, []);\n\n  const cardList =\n    deckList.length > 0 ? (\n      deckList.map((deck) => <Deck key={deck.id} deck={deck} />)\n    ) : (\n      <p />\n    );\n\n  return (\n    <main className=\"container\">\n      <section className=\"column\">{cardList}</section>\n    </main>\n  );\n}\n\nfunction handleClick(arg) {\n\n  if (arg === \"Create Deck\") {\n\n  }\n\n  if (arg === \"view\") {\n\n  }\n\n  if (arg === \"study\") {\n\n  }\n\n}\n\nfunction Layout() {\n  return (\n    <Fragment>\n      <Link to=\"/\"></Link>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={handleClick(\"Create Deck\")}>\n              Create Deck\n            </button>\n            <DeckList />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}