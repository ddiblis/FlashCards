{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listCards, listDecks } from \"../utils/api\";\n\nfunction ErrorMessage({\n  error\n}) {\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"ERROR: \", error.message));\n}\n\nfunction Deck({\n  deck\n}) {\n  const [cardList, setCardList] = useState([]);\n  const [error, setError] = useState(undefined); // useEffect(() => {\n  //     listCards(deck.id).then(i => setCardList(i)).catch(setError)\n  //     // setCardList(listCards(deck.i))\n  // }, [deck.id])\n\n  useEffect(() => (async () => {\n    const d = await listDecks();\n    console.log(d);\n    const cards = d.find(d2 => deck.id === d2.id).cards;\n    setCardList(cards);\n  })(), [deck.id]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ErrorMessage, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const noOfCards = cardList && cardList.filter(card => !card.cards).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, deck.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, noOfCards + \" cards\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, deck.description), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Study\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Delete Deck\")));\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDeckList).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ErrorMessage, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const cardList = deckList.length > 0 ? deckList.map(deck => /*#__PURE__*/React.createElement(Deck, {\n    key: deck.id,\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, cardList));\n}\n\nfunction Layout() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Create Deck\"), /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Switch","Route","Link","Header","NotFound","listCards","listDecks","ErrorMessage","error","color","message","Deck","deck","cardList","setCardList","setError","undefined","d","console","log","cards","find","d2","id","noOfCards","filter","card","length","name","description","DeckList","deckList","setDeckList","abortController","AbortController","signal","then","catch","abort","map","Layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listCards, listDecks } from \"../utils/api\";\n\nfunction ErrorMessage({ error }) {\n  return (\n    <main className=\"container\">\n      <p style={{ color: \"red\" }}>ERROR: {error.message}</p>\n    </main>\n  );\n}\n\nfunction Deck({ deck }) {\n  const [cardList, setCardList] = useState([]);\n  const [error, setError] = useState(undefined);\n\n  // useEffect(() => {\n  //     listCards(deck.id).then(i => setCardList(i)).catch(setError)\n  //     // setCardList(listCards(deck.i))\n  // }, [deck.id])\n\n  useEffect(\n    () =>\n      (async () => {\n        const d = await listDecks()\n        console.log(d)\n        const cards = d.find(d2 => deck.id === d2.id).cards\n        setCardList(cards);\n      })(),\n    [deck.id]\n  );\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const noOfCards = cardList && cardList.filter((card) => !card.cards).length;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p>{noOfCards + \" cards\"}</p>\n        <p className=\"card-text\">{deck.description}</p>\n        <button type=\"button\" className=\"btn btn-secondary\">\n          View\n        </button>\n        <button type=\"button\" className=\"btn btn-primary\">\n          Study\n        </button>\n        <button type=\"button\" className=\"btn btn-danger\">\n          Delete Deck\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    listDecks(abortController.signal).then(setDeckList).catch(setError);\n\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n  const cardList =\n    deckList.length > 0 ? (\n      deckList.map((deck) => <Deck key={deck.id} deck={deck} />)\n    ) : (\n      <p />\n    );\n\n  return (\n    <main className=\"container\">\n      <section className=\"column\">{cardList}</section>\n    </main>\n  );\n}\n\nfunction Layout() {\n  return (\n    <Fragment>\n      <Link to=\"/\"></Link>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg\">\n              Create Deck\n            </button>\n            <DeckList />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}