{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listCards, listDecks } from \"../utils/api\";\n\nfunction ErrorMessage({\n  error\n}) {\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"ERROR: \", error.message));\n}\n\nfunction Deck({\n  deck\n}) {\n  const [cardList, setCardList] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listCards(deck.id, abortController.signal).then(setCardList).catch(setError);\n    return () => abortController.abort();\n  }, [deck.id]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ErrorMessage, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const noOfCards = cardList.filter(card => !card.cards).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, deck.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, noOfCards + \" cards\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, deck.description), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Study\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Delete Deck\")));\n}\n\nfunction DeckList() {\n  const [deckList, setDeckList] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDeckList).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ErrorMessage, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const cardList = deckList.map(deck => /*#__PURE__*/React.createElement(Deck, {\n    key: deck.id,\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 45\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, cardList));\n}\n\nfunction Layout() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Create Deck\"), /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Switch","Route","Link","Header","NotFound","listCards","listDecks","ErrorMessage","error","color","message","Deck","deck","cardList","setCardList","setError","undefined","abortController","AbortController","id","signal","then","catch","abort","noOfCards","filter","card","cards","length","name","description","DeckList","deckList","setDeckList","map","Layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\"\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport { listCards, listDecks } from \"../utils/api\";\n\nfunction ErrorMessage ({ error }) {\n  return (\n    <main className=\"container\">\n      <p style={{ color: \"red\" }}>ERROR: {error.message}</p>\n    </main>\n  )\n}\n\nfunction Deck({ deck }) {\n  const [cardList, setCardList] = useState([]);\n  const [error, setError] = useState(undefined)\n\n  useEffect(() => {\n      const abortController = new AbortController();\n\n      listCards(deck.id, abortController.signal).then(setCardList).catch(setError)\n\n      return () => abortController.abort();\n  }, [deck.id])\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n\n  const noOfCards = cardList.filter(card => !card.cards).length\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p>{noOfCards + \" cards\"}</p>\n        <p className=\"card-text\">{deck.description}</p>\n        <button type=\"button\" className=\"btn btn-secondary\">View</button>\n        <button type=\"button\" className=\"btn btn-primary\">Study</button>\n        <button type=\"button\" className=\"btn btn-danger\">Delete Deck</button>\n      </div>\n    </div>\n  );\n}\n\n\nfunction DeckList() {\n    const [deckList, setDeckList] = useState([])\n    const [error, setError] = useState(undefined)\n\n    useEffect(() => {\n        const abortController = new AbortController()\n\n        listDecks(abortController.signal).then(setDeckList).catch(setError)\n\n        return () => abortController.abort()\n    }, [])\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n    const cardList = deckList.map((deck) => <Deck key={deck.id} deck={deck} />)\n\n    return (\n        <main className=\"container\">\n            <section className=\"column\">{cardList}</section>\n        </main>\n    )\n}\n\nfunction Layout() {\n  return (\n    <Fragment>\n      <Link to=\"/\"></Link>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg\">Create Deck</button>\n            <DeckList />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}