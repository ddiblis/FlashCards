{"ast":null,"code":"var _jsxFileName = \"/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { createCard, listCards, readDeck } from \"../utils/api\";\nexport default function AddCard() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  const [form, setForm] = useState({\n    front: \"\",\n    back: \"\",\n    deckId: parseInt(deckId),\n    id: 1\n  });\n\n  const handleFrontChange = event => pushVar({\n    front: event.target.value\n  });\n\n  const handleBackChange = event => pushVar({\n    back: event.target.value\n  });\n\n  const history = useHistory();\n  const initialValue = parseInt(deckId) * 1000;\n\n  const pushVar = values => {\n    setForm({ ...form,\n      ...values\n    });\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setSelectedDeck);\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listCards(selectedDeck.id).then(setCardList);\n    return () => abortController.abort();\n  }, [selectedDeck.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${selectedDeck.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, selectedDeck.name)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Add Card\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, selectedDeck.name + \": Add Card\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => {\n      createCard(deckId, form);\n      history.push(`/decks/${selectedDeck.id}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Front\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Front side of card\",\n    onChange: handleFrontChange,\n    style: {\n      width: \"100%\",\n      height: \"150px\"\n    },\n    value: form.front,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Back side of card\",\n    onChange: handleBackChange,\n    style: {\n      width: \"100%\",\n      height: \"150px\"\n    },\n    value: form.back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"flex-start\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${selectedDeck.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    style: {\n      marginLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    style: {\n      marginLeft: \"5px\"\n    },\n    onClick: () => {\n      pushVar({\n        id: initialValue + cardList.length + 1\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/home/iblis/src/flascardProject/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx"],"names":["React","useEffect","useState","useParams","Link","useHistory","createCard","listCards","readDeck","AddCard","selectedDeck","setSelectedDeck","cardList","setCardList","deckId","form","setForm","front","back","parseInt","id","handleFrontChange","event","pushVar","target","value","handleBackChange","history","initialValue","values","abortController","AbortController","signal","then","abort","name","push","width","height","justifyContent","marginLeft","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\n\nimport { createCard, listCards, readDeck } from \"../utils/api\";\n\nexport default function AddCard() {\n  const [selectedDeck, setSelectedDeck] = useState([]);\n  const [cardList, setCardList] = useState([])\n  const { deckId } = useParams();\n  const [form, setForm] = useState({\n    front: \"\",\n    back: \"\",\n    deckId: parseInt(deckId),\n    id: 1\n  })\n  const handleFrontChange = (event) => pushVar({ front: event.target.value });\n  const handleBackChange = (event) => pushVar({ back: event.target.value });\n  const history = useHistory()\n  const initialValue = (parseInt(deckId) * 1000)\n\n\n  const pushVar = (values) => {\n    setForm({ ...form, ...values })\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setSelectedDeck)\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    listCards(selectedDeck.id).then(setCardList)\n\n    return () => abortController.abort()\n  }, [selectedDeck.id])\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={`/decks/${selectedDeck.id}`}>{selectedDeck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Add Card\n          </li>\n        </ol>\n      </nav>\n      <h3>{selectedDeck.name + \": Add Card\"}</h3>\n      <form onSubmit={() => {\n        createCard(deckId, form)\n        history.push(`/decks/${selectedDeck.id}`)\n      }}>\n        <label htmlFor=\"name\">Front</label> <br />\n        <textarea\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Front side of card\"\n          onChange={handleFrontChange}\n          style={{ width: \"100%\", height: \"150px\" }}\n          value={form.front}\n        />{\" \"}\n        <br />\n        <br />\n        <label htmlFor=\"description\">Back</label>\n        <br />\n        <textarea\n          id=\"description\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Back side of card\"\n          onChange={handleBackChange}\n          style={{ width: \"100%\", height: \"150px\" }}\n          value={form.back}\n        />{\" \"}\n        <br />\n        <div style={{ justifyContent: \"flex-start\" }}>\n          <Link to={`/decks/${selectedDeck.id}`}>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              style={{ marginLeft: \"5px\" }}\n            >\n              Done\n            </button>\n          </Link>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              style={{ marginLeft: \"5px\" }}\n              onClick={() => {\n               \n                pushVar({ id: initialValue + cardList.length + 1 })\n               \n              }}\n            >\n              Save\n            </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}